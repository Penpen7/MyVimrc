[[plugins]]
repo = 'itchyny/calendar.vim'
[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'Shougo/vimshell.vim'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = '''
let g:sonictemplate_vim_template_dir = ['$HOME/template']'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'

[[plugins]]
repo = 'wordijp/NeoDebug'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = 'let g:WebDevIconsUnicodeDecorateFolderNodes = 1'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add= '''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline_theme = 'molokai'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
'''
depends = ['vim-airline-themes']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
if !exists("g:quickrun_config")
  let g:quickrun_config={}
endif
augroup rust_quickrun
autocmd BufNewFile,BufRead *.crs setf rust
autocmd BufNewFile,BufRead *.rs  let g:quickrun_config.rust = {'exec' : 'cargo run'}
autocmd BufNewFile,BufRead *.crs let g:quickrun_config.rust = {'exec' : 'cargo script %s -- %a'}
augroup END
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
build = '''
  git checkout release
'''
hook_add = '''
  inoremap <silent><expr> <TAB>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<TAB>" :
        \ coc#refresh()
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
  endfunction
  "スペースhでHover
  nmap <silent> <space>h :call CocAction('doHover')<CR>
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)
  nmap <silent> <space>fmt <Plug>(coc-format)
  nmap <silent> <space>r <Plug>(coc-rename) 
'''
